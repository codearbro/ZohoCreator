void SendToXero()
{
	/*
	refresh_token = "T0BK1D8XaUtAINP5AbPmmFe-nY1teqgQUOdTSQVaMvQ";
	data = Map();
	data.put("grant_type","refresh_token");
	data.put("refresh_token",refresh_token);
	data.put("client_id","79F992067AAF4188B54473D80A2FD982");
	data.put("client_secret","AptJSJBOw6FoljyCFhVCwt4gXpTMot9gWKUB8ArHSuXeyC7k");
	headers = Map();
	headers.put("grant_type","refresh_token");
	headers.put("Content-Type","application/json");
	res = invokeurl
	[
		url :"https://identity.xero.com/connect/token?="
		type :POST
		parameters:data
		headers:headers
	];
	access_token = res.get("access_token");
	refresh_token = res.get("refresh_token");
	*/
	client_id = "88C9D773695E449C9C4039B11D03B08C";
	client_secret = "r1FC2jCiS0_1I6NZlIZiWmxUx1vHhAVwERCqSa7a4NasTv1Y";
	scopes = "accounting.transactions accounting.transactions.read accounting.reports.read accounting.reports.tenninetynine.read accounting.budgets.read accounting.journals.read accounting.settings accounting.settings.read accounting.contacts accounting.contacts.read accounting.attachments accounting.attachments.read assets files files.read payroll.employees payroll.employees.read payroll.payruns payroll.payruns.read payroll.payslip payroll.payslip.read payroll.settings payroll.settings.read payroll.timesheets payroll.timesheets.read projects projects.read";
	// Construct the Authorization header value
	auth_header_value = "Basic " + zoho.encryption.base64Encode(client_id + ":" + client_secret);
	// Construct the request body
	data = {"grant_type":"client_credentials","scope":scopes};
	// Construct the headers
	headers = {"Authorization":auth_header_value,"Content-Type":"application/x-www-form-urlencoded"};
	// Make the POST request
	response = postUrl("https://identity.xero.com/connect/token",data,headers);
	// Print the response
	access_token = response.get("access_token");
	// 	info access_token;
	headers = Map();
	headers.put("xero-tenant-id","580c7fc4-139f-4c02-8268-4fef5a2dedb6");
	headers.put("Authorization","Bearer " + access_token);
	headers.put("Accept","application/json");
	headers.put("Content-Type","application/json");
	///////////GET Contact Details//////////////
	inv = Add_Invoices[ID == 13164000004906140];
	contactId = inv.Customer_Name;
	customer = Subform_Customer_Site_Contacts[ID == contactId];
	email = customer.SiteContact_Email;
	info email;
	info inv.Line_Item;
	//////////////
	lineList = list();
	lineItem = inv.Line_Item;
	info "LineItem " + lineItem;
	invDate = inv.Date_field;
	for each  line in lineItem
	{
		lines = Line_Item[ID == line];
		description = lines.Description;
		quantity = lines.QTY;
		price = lines.Price;
		accountId = lines.Bank_Accounts;
		acc = Accounts[ID == accountId];
		accountCode = acc.code;
		discount = lines.Discount;
		lineMP = Map();
		lineMP.put("Description",ifnull(description,""));
		lineMP.put("Quantity",ifnull(quantity,0));
		lineMP.put("UnitAmount",ifnull(price,0));
		lineMP.put("AccountCode",ifnull(accountCode,""));
		lineMP.put("DiscountRate",ifnull(discount,""));
		lineList.add(lineMP);
	}
	info "Line list " + lineList;
	/////////////////////////////////////////////
	////////GET CONTACTS////////////////////
	getContact = invokeurl
	[
		url :"https://api.xero.com/api.xro/2.0/Contacts?where=EmailAddress=\"" + email + "\""
		type :GET
		parameters:""
		headers:headers
	];
	// 	info getContact;
	con = getContact.get("Contacts");
	for each  contact in con
	{
		xero_contact_id = contact.get("ContactID");
	}
	info xero_contact_id;
	/////////////////
	data = {"Type":"ACCREC","Contact":{"ContactID":xero_contact_id},"DateString":invDate.toDate(),"DueDateString":invDate.todate(),"LineAmountTypes":"Exclusive","LineItems":lineList,"Status":"AUTHORISED"};
	info "Data " + data + "\nend";
	// 	headers = Map();
	// 	headers.put("xero-tenant-id","580c7fc4-139f-4c02-8268-4fef5a2dedb6");
	// 	headers.put("Authorization","Bearer " + access_token);
	// 	headers.put("Accept","application/json");
	// 	headers.put("Content-Type","application/json");
	response = invokeurl
	[
		url :"https://api.xero.com/api.xro/2.0/Invoices"
		type :POST
		parameters:data.tostring()
		headers:headers
	];
	info response;
}
